/**
 * Author: Marcel Maier
 *
 * NOTE:
 * In this file we use our database types generated by supabase cli,
 * and give them meaningful names that we can use troughout the entire application.
 */

import { Database, Tables } from '@/lib/supabase/types_db'

/*
 * NOTE: Generic Helpers
 */

// Helper type to ensure the string literal matches a valid enum value
export type ValidateLiteral<T, U extends T> = U;

// Helper type to ensure all enums are set in a Record
export type EnsureAll<T extends string, U extends Record<T, string>> = {
    [K in T]: K extends keyof U ? U[K] : never;
};

export type RevalidationPaths = null | string | string[]

export type DBResult<T> = Promise<{ data: T | null; error: Error | null }>
/*
 * NOTE: Auth
 */

export type User = Tables<'users'>
export type Companies = Database["public"]["Enums"]["company"];
export type Countries = Database["public"]["Enums"]["country"];

/*
 * NOTE: Reports
 */

export type Report = Tables<'report'>;

export type ReportWithUsers = Report & {
    creator: {
        full_name: string
    } | null,
    assignee: {
        full_name: string
    } | null,
}

export type ReportStatus = Database['public']['Enums']['report_status']

/*
 * NOTE: Positions
 */

export type Position = BillPosition | TravelPosition;

export type PositionTypes = Database['public']['Enums']['position_type']

export type BasePosition = Tables<'base_position'> & { type: PositionTypes };
export type BillPosition = BasePosition & { type: ValidateLiteral<PositionTypes, 'BILL'> } & Tables<'bill_position'>;
export type TravelPosition = BasePosition & { type: ValidateLiteral<PositionTypes, 'TRAVEL'> } & Tables<'travel_position'>;


